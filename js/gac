#!/bin/sh
":" //;NODE_PATH=$(npm -g root) exec node -r $(dirname $0)/sideLoad.js "$0" "$@"
  const usage = `Adds specified files (or all if none specified) to git staging and commits (if -m used) or starts a \
verbose commit.`;
const argv = require('yargs')
  .usage(usage)
  .alias('help', 'h')
  .option( 'amend', { alias: 'a', type: 'boolean', description: 'Flag to ammend previous commit' })
  .option( 'file', { alias: 'f', type: 'array', description: 'List of files to add, defaults to `.`' })
  .option( 'message', { alias: 'm', type: 'string', description: 'Message to pass to commit. Omit for -v' })
  .option( 'noadd', { alias: 'n', type: 'boolean', description: 'Skip Adding files' })
  .option( 'push', { alias: 'p', type: 'boolean', description: 'Flag to push after commit' })
.argv;
const inquirer = require('inquirer');
const {execSync, spawn} = require('child_process');

(async () => {
  if (!argv.noadd) {
    let files = '.';
    if (argv.file) {
      files = argv.file.reduce((list, file) => list += ` ${file}`);
    }

    execSync(`git add ${files}`, { encoding: 'utf8' });
  }
  const message = argv.message || argv._[0];
  if (message) {
    execSync(`git commit -m "${message}"`, { encoding: 'utf8' });
  } else {
    let childArgs = ['commit', '--verbose'];
    if (argv.amend) {
      childArgs.push('--amend');
    }
    spawn('git', childArgs, {stdio: 'inherit'});
  }

  if (argv.push) {
    execSync(`git push`);
  } 
})();
// vim: ft=javascript
